/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author nuria
 */
public class EJPractica1 extends javax.swing.JFrame {

    /**
     * Creates new form EJPractica1
     */
    public EJPractica1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Ruta = new javax.swing.JTextField();
        BotonLeer = new javax.swing.JButton();
        BotonEscribir = new javax.swing.JButton();
        Destino = new javax.swing.JTextField();
        TituloS = new javax.swing.JLabel();
        TituloO = new javax.swing.JLabel();
        TituloD = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Mostrar = new javax.swing.JTextArea();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        BotonLeer.setText("Leer");
        BotonLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonLeerActionPerformed(evt);
            }
        });

        BotonEscribir.setText("Escribir");
        BotonEscribir.setEnabled(false);
        BotonEscribir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotonEscribirActionPerformed(evt);
            }
        });

        TituloS.setText("Salida");

        TituloO.setText("Origen");

        TituloD.setText("Destino");

        Mostrar.setColumns(20);
        Mostrar.setLineWrap(true);
        Mostrar.setRows(5);
        jScrollPane1.setViewportView(Mostrar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(TituloD, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Destino))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(BotonLeer)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(BotonEscribir))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(TituloO, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(Ruta, javax.swing.GroupLayout.PREFERRED_SIZE, 318, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(72, 72, 72))
            .addGroup(layout.createSequentialGroup()
                .addGap(99, 99, 99)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(TituloS, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Ruta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TituloO))
                .addGap(18, 18, 18)
                .addComponent(TituloS)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Destino, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(TituloD))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(BotonLeer)
                    .addComponent(BotonEscribir))
                .addGap(30, 30, 30))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BotonLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonLeerActionPerformed
 String ruta = "src/interfaces/" + Ruta.getText() + ".txt";
        BufferedReader miBufferLectura = null;

        try {
            miBufferLectura = new BufferedReader(new FileReader(ruta));
            String cadena = miBufferLectura.readLine();

            while (cadena != null) {
                    Mostrar.append(cadena + "\n");
                    cadena = miBufferLectura.readLine();
            }
        BotonEscribir.setEnabled(true);
        BotonLeer.setEnabled(false);
        } catch (FileNotFoundException e) {
            JOptionPane.showMessageDialog(this, "ERROR!! El fichero no existe", "Oh no!", JOptionPane.ERROR_MESSAGE);
        } catch (IOException e) {
            System.out.println("Error: No se han podido cerrar los "
                    + "flujos de datos o problema leyendo.");
            System.out.println(e.getMessage());
            JOptionPane.showMessageDialog(this, "ERROR!!No se ha podido cerrar los flujos de datos o problema leyendo.", "Oh no!", JOptionPane.ERROR_MESSAGE);
        } finally {
            // 4. Cierro todos los flujos
            try {

                if (miBufferLectura != null) {
                    miBufferLectura.close();
                }
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "ERROR!!No se ha "
                        + "podido cerrar los flujos de datos.", "Oh no!", JOptionPane.ERROR_MESSAGE);
            }
        }



    }//GEN-LAST:event_BotonLeerActionPerformed

    private void BotonEscribirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotonEscribirActionPerformed
        String destino = "src/interfaces/" + Destino.getText() + ".txt";
        BufferedWriter br = null;
        try {
            if(!destino.isEmpty()){
            br = new BufferedWriter(new FileWriter(destino, true));
            br.write(Mostrar.getText());
            BotonEscribir.setEnabled(false);
            BotonLeer.setEnabled(true);
            }else{
                     JOptionPane.showMessageDialog(this, "ERROR!! Destino esta vacio", "Oh no!", JOptionPane.ERROR_MESSAGE);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "ERROR!! El fichero no puede ser abierto o creado.", "Oh no!", JOptionPane.ERROR_MESSAGE);

        } finally {
            try {
                //4.-Cerrar flujos
                br.close();
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "ERROR!!No se ha "
                        + "podido cerrar los flujos de datos.", "Oh no!", JOptionPane.ERROR_MESSAGE);
            }

        }
        
    }//GEN-LAST:event_BotonEscribirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(EJPractica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(EJPractica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(EJPractica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(EJPractica1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new EJPractica1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotonEscribir;
    private javax.swing.JButton BotonLeer;
    private javax.swing.JTextField Destino;
    private javax.swing.JTextArea Mostrar;
    private javax.swing.JTextField Ruta;
    private javax.swing.JLabel TituloD;
    private javax.swing.JLabel TituloO;
    private javax.swing.JLabel TituloS;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
